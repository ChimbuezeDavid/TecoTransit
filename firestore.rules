rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /bookings/{bookingId} {
      
      function validateBookingData() {
        let vehicleRules = {
          '4-Seater Sienna': 4,
          '5-Seater Sienna': 2,
          '7-Seater Bus': 2
        };
        let maxLuggage = vehicleRules[request.resource.data.vehicleType];
        
        return request.resource.data.name is string &&
               request.resource.data.name.size() > 1 &&
               request.resource.data.email is string &&
               request.resource.data.email.matches('.*@.*\\..*') &&
               request.resource.data.phone is string &&
               request.resource.data.phone.size() > 9 &&
               request.resource.data.pickup is string &&
               request.resource.data.destination is string &&
               request.resource.data.intendedDate is string &&
               request.resource.data.alternativeDate is string &&
               request.resource.data.vehicleType is string &&
               request.resource.data.vehicleType in vehicleRules &&
               request.resource.data.luggageCount is number &&
               request.resource.data.luggageCount >= 0 &&
               request.resource.data.luggageCount <= maxLuggage &&
               request.resource.data.totalFare is number &&
               request.resource.data.status == 'Pending' &&
               request.resource.data.createdAt is number;
      }

      // Allow anyone to create a booking if the data is valid.
      allow create: if validateBookingData();
      
      // Allow anyone to read a single booking (for the confirmation page).
      allow get: if true;

      // Allow only authenticated admins to list, update, or delete bookings.
      allow list, update, delete: if request.auth != null;
    }
  }
}